<apex:page sidebar="false" showHeader="{!NOT(fullScreen)}" controller="FSL.ctrl001_Gantt" title="Field Service Lightning">
<html xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">

<head>
		<script type='text/javascript' src='/support/console/31.0/integration.js' />

		<apex:stylesheet value="{!URLFOR($Resource.FSL__dhxScheduler42fix, 'dhtmlxscheduler.css')}" />
		<apex:stylesheet value="{!URLFOR($Resource.FSL__dhxContextMenu, 'dhtmlxmenu.css')}" />

		<apex:stylesheet value="{!$Resource.FSL__dhtmlxtreeviewCSS}" />

		<apex:outputPanel rendered="{!fullScreen}">
		<apex:stylesheet value="{!$Resource.FSL__css001_ServiceExpertFull}" />
		</apex:outputPanel>

		<apex:stylesheet value="{!URLFOR($Resource.FSL__salesforceSansFonts, 'css/SalesforceSansFont.css')}" />
		<apex:stylesheet value="{!URLFOR($Resource.FSL__FontAwesome44, 'css/font-awesome.min.css')}" />

		<apex:stylesheet value="{!$Resource.FSL__FieldExpertCss}" />
		<apex:stylesheet value="{!URLFOR($Resource.FSL__LightningDesignSystem, 'assets/styles/salesforce-lightning-design-system-vf.css')}" />

		<!-- automation files -->
		<apex:outputPanel rendered="{!automationMode}">
			<apex:includeScript value="/soap/ajax/28.0/connection.js"/>
			<apex:includeScript value="/soap/ajax/28.0/apex.js"/>
		</apex:outputPanel>

		<!-- production files -->
		<apex:outputPanel rendered="{!NOT(debugMode)}">
			<apex:includeScript value="{!$Resource.FSL__FieldExpertVendors}" />
			<apex:includeScript value="{!$Resource.FSL__FieldExpertDhtmlx}" />
			<!--<apex:includeScript value="{!IF(mapMode == '1',$Resource.Ang_app,$Resource.Ang_app_NoMap)}" />-->
			<apex:includeScript value="{!$Resource.FSL__FieldExpertApp}" />
		</apex:outputPanel>

		<!-- if debugMode=1 then load separated files -->
		<apex:outputPanel rendered="{!debugMode}">

			<apex:stylesheet value="{!$Resource.FSL__FieldExpertCss}" />

			<apex:includeScript value="{!$Resource.FSL__Polyfills}" />

			<apex:includeScript value="{!$Resource.FSL__cometd}" />
			<apex:includeScript value="{!$Resource.FSL__cometdReplayExtension}" />

			<apex:includeScript value="{!$Resource.FSL__jQuery}" />
			<apex:includeScript value="{!$Resource.FSL__jqueryCometd}" />
			<apex:includeScript value="{!$Resource.FSL__split}" />
			<apex:includeScript value="{!$Resource.FSL__svg4everybody_min}" />


			<apex:includeScript value="{!URLFOR($Resource.FSL__dhtmlxScheduler4335DaylightSavings, 'dhtmlxscheduler.js')}" />
			<apex:includeScript value="{!URLFOR($Resource.FSL__dhtmlxScheduler4335DaylightSavings, 'ext/dhtmlxscheduler_limit.js')}" />
			<apex:includeScript value="{!URLFOR($Resource.FSL__dhtmlxScheduler4335DaylightSavings, 'sources/ext/dhtmlxscheduler_timeline.js')}" />
			<!--apex:includeScript value="{!$Resource.dhtmlxscheduler_timeline_celltext}" /-->
			<apex:includeScript value="{!URLFOR($Resource.FSL__dhtmlxScheduler4335DaylightSavings, 'ext/dhtmlxscheduler_treetimeline.js')}" />
			<apex:includeScript value="{!URLFOR($Resource.FSL__dhtmlxScheduler4335DaylightSavings, 'ext/dhtmlxscheduler_minical.js')}" />
			<apex:includeScript value="{!URLFOR($Resource.FSL__dhtmlxScheduler4335DaylightSavings, 'ext/dhtmlxscheduler_tooltip.js')}" />
			<apex:includeScript value="{!URLFOR($Resource.FSL__dhtmlxScheduler4335DaylightSavings, 'ext/dhtmlxscheduler_cookie.js')}" />
			<apex:includeScript value="{!URLFOR($Resource.FSL__dhtmlxScheduler4335DaylightSavings, 'ext/dhtmlxscheduler_url.js')}" />
			<apex:includeScript value="{!URLFOR($Resource.FSL__dhtmlxScheduler4335DaylightSavings, 'ext/dhtmlxscheduler_readonly.js')}" />
			<apex:includeScript value="{!URLFOR($Resource.FSL__dhtmlxScheduler4335DaylightSavings, 'ext/dhtmlxscheduler_multisection.js')}" />

			<apex:includeScript value="{!URLFOR($Resource.FSL__dhxContextMenu, 'dhtmlxmenu.js')}" />

			<apex:includeScript value="{!$Resource.FSL__dhtmlxtreeview}" />

			<apex:includeScript value="{!$Resource.FSL__angular150min}" />
			<apex:includeScript value="{!$Resource.FSL__MomentJS}" />
			<apex:includeScript value="{!$Resource.FSL__MomentTimezone}" />
			<apex:includeScript value="{!$Resource.FSL__AngularMoment}" />
			<apex:includeScript value="{!$Resource.FSL__ChartJS}" />
			<apex:includeScript value="{!$Resource.FSL__AngularChartjs}" />
			<apex:includeScript value="{!$Resource.FSL__bootstrap}" />
			<apex:includeScript value="{!$Resource.FSL__geoxml3}" />
			<apex:includeScript value="{!$Resource.FSL__jsts_min}" />
			<apex:includeScript value="{!$Resource.FSL__Ang_app}" />


			<!-- Classes --> 
			<apex:includeScript value="{!$Resource.FSL__OperatingHours}" />
			<apex:includeScript value="{!$Resource.FSL__ResourceAbsence}" />
			<apex:includeScript value="{!$Resource.FSL__ResourcesAndTerritories}" />
			<apex:includeScript value="{!$Resource.FSL__GanttService}" />
			<apex:includeScript value="{!$Resource.FSL__ServiceResource}" />
			<apex:includeScript value="{!$Resource.FSL__ServiceTerritory}" />
			<apex:includeScript value="{!$Resource.FSL__ServiceResourceSkill}" />
			<apex:includeScript value="{!$Resource.FSL__LastKnownPosition}" />
			<apex:includeScript value="{!$Resource.FSL__ResourceCapacity}" />
			<apex:includeScript value="{!$Resource.FSL__OptimizationRequest}" />


 
			<!-- Services -->
			<apex:includeScript value="{!$Resource.FSL__MstClientResolver}" />
			<apex:includeScript value="{!$Resource.FSL__Ang_Service_ServicesService}" />
			<apex:includeScript value="{!$Resource.FSL__Ang_Service_Utils}" />
			<apex:includeScript value="{!$Resource.FSL__Ang_Service_sfdc}" />
			<apex:includeScript value="{!$Resource.FSL__Ang_Service_SettingsManager}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_CalendarsService}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_ResourceFilterHelperService}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_monthlyViewHelperService}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_ResourcesAndTerritoriesService}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_StateService}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_TimePhasedDataService}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_AbsencesService}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_LoadServiceListService}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_SkillsServiceService}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_FieldSetFieldsService}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_DeltaService}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_ServiceSelectorService}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_AbsenceLightbox}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_ResourceLightbox}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_CapacityLightbox}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_ServiceLightbox}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_GeneralLightbox}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_LocationFilteringService}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_kpiCalculationsService}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_BulkUnscheduleService}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_LastKnownPositionService}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_ResourceCapacitiesService}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_BulkDispatchService}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_BulkCancelService}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_BulkResultsService}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_OptimizeLightboxService}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_GetSlotsService}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_BulkScheduleService}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_BulkScheduleResultsService}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_ResourceSmallMenu}" />


			<!-- Filters -->
			<apex:includeScript value="{!$Resource.FSL__Gantt_ampmOr24Filter}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_orderObjectByFilter}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_paginationFilter}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_servicesListFilter}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_timelineFilter}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_toArrayFilter}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_displayFieldSetField}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_replaceLabelsFilter}" />


			<!-- Constants -->
			<apex:includeScript value="{!$Resource.FSL__Gantt_dhtmlxDaysConstant}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_parentRecordTypeConstant}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_ServiceStatusConstant}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_ServiceCategoryConstant}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_polygonDrawingStates}" />

			<!-- Directives -->
			<apex:includeScript value="{!$Resource.FSL__Gantt_RangeDirective}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_toggleDirective}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_dhxSchedulerDirective}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_googlePlacesDirective}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_keypressEventsDirective}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_dragNADirective}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_draggableServiceDirective}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_stopPropagationDirective}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_groupActionsDirective}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_BulkActionsDirective}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_optimizationIndicatorDirective}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_ColorPicker}" />
			<apex:includeScript value="{!$Resource.FSL__Gantt_SafeBinderDirective}" />


			<!-- Controllers -->
			<apex:includeScript value="{!$Resource.FSL__Ang_Controller_ServiceList}" />
			<apex:includeScript value="{!$Resource.FSL__Ang_Controller_Gantt}" />
			<apex:includeScript value="{!$Resource.FSL__Ang_Controller_RightSide}" />
			<apex:includeScript value="{!$Resource.FSL__Ang_Controller_Map}" />
			<apex:includeScript value="{!$Resource.FSL__Ang_Controller_MainController}" />

			<apex:includeScript value="{!$Resource.FSL__SchedulerConfigs}" />
			<apex:includeScript value="{!$Resource.FSL__GanttScripts}" />
			<apex:includeScript value="{!$Resource.FSL__datePickerConf}" />

			<apex:includeScript value="{!$Resource.FSL__jqueryUI}" />
			<apex:includeScript value="{!$Resource.FSL__Bootstrap_UI_Min}" />

            <apex:includeScript value="{!$Resource.FSL__lodash}" />
            <apex:includeScript value="{!$Resource.FSL__angular_simple_logger}" />
			<apex:includeScript value="{!$Resource.FSL__angular_google_maps_min_232}" />

		</apex:outputPanel>


		<!-- Map scripts -->
		<apex:outputPanel rendered="{!mapMode == '1' && dontShowMapBecauseChina == false}">
			<apex:includeScript value="https://maps.googleapis.com/maps/api/js?key=AIzaSyCNImkmz3Egi_Yx7ji4F8fg0J8FsNUGHXE&libraries=places,drawing" />
		</apex:outputPanel>

	</head>


    <!-- Error - displayed if gantt failed to load -->
    <div id="ErrorLoadingGantt">
   		<img src="{!$Resource.SalesfoceLogo}" />
   		<h1>{!$Label.Something_Went_Wrong}</h1>
   		<div id="ErrorContainer"></div>
   	</div>


    <div id="serviceExpertApp" ng-controller="mainController" class="keypressEvents" lang="{{ :: lang }}" ng-class="{OSX: isOSX}">

    <apex:outputPanel rendered="{!fullScreen}">
        <div id="ServiceExpertHeader">
            <img id="WhiteLogo" src="{!$Resource.SalesfoceLogo}" />
            <span id="FSLTextLogo">{!$Label.FieldService_is_Loading}</span>

            <div id="HeaderLinksContainer">
                <a target="_blank" href="../{!servicePrefix}">{!$Label.Services_Link}</a>
                <a target="_blank" href="../{!resourcePrefix}">{!$Label.Resources_Link}</a>
                <a target="_blank" href="../{!absencePrefix}">{!$Label.EmployeeAbsences_Link}</a>
                <a target="_blank" href="../{!accountPrefix}">{!$Label.Accounts_Link}</a>
            </div>

            <div id="userDetails">{!$User.FirstName} {!$User.LastName} - {!$User.username}</div>
        </div>
    </apex:outputPanel>

    	<div id="FirstTimeLoading">
    		<div>
	    		<img id="loadingSFLogo" src="{!$Resource.SalesfoceLogo}" />
	    		<div>{!$Label.FieldService_is_Loading}</div>

	    		<div id="loadingAnimation" class="slds-spinner_container">
					<div class="slds-spinner slds-spinner--medium" aria-hidden="false" role="alert">
						<div class="slds-spinner__dot-a"></div>
						<div class="slds-spinner__dot-b"></div>
					</div>
				</div>
	    	</div>
    	</div>

    	<div id="draggedEvent"><div></div></div>
    	<div class="NA_AbsenceDrag" id="draggedBreak"><div></div></div>


        <div id="LeftSideContainer" ng-controller="serviceListCtrl" class="ng-cloak split split-horizontal" ng-show="!reallyHideList">

        	<!-- gantt settings lightbox -->
	    	<div class="LightboxBlackContainer ng-cloak" ng-show="showGanttSettings">
				<div class="LightboxContainer LightboxContainerAnimation" id="ganttSettingsLightbox">

					<div class="lightboxHeaderContainer" id="ganttSettingsLightboxHeader">
						<svg ng-click="closeSettingsLightbox()" aria-hidden="true" class="slds-icon CloseLightbox">
							 <use xlink:href="{!URLFOR($Resource.LightningDesignSystem, 'assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
						 </svg>
						<h1 class="light-box-header">{!$Label.Gantt_Settings}</h1>
					</div>

					<div class="lightboxContentContainer">

						<div class="GanttSettingsRow">
							<div class="settingLabel">
								{!$Label.FilterAfterSlots}
								<div class="settingExplain">{!$Label.FilterAfterSlotsExplain}</div>
							</div>

							<div class="settingsValues settingsValuesWithPadding">
								<input id="filterCandidates" type="checkbox" ng-model="ganttSettingDraft.filterCandidates" /> <label for="filterCandidates">{!$Label.Enable}</label>
							</div>
						</div>


						<div class="GanttSettingsRow">
							<div class="settingLabel">
								{!$Label.Back_Horizon}
								<div class="settingExplain">{!$Label.Back_Horizon_Explanation}</div>
							</div>

							<div class="settingsValues">
								<input required="required" type="number" min="1" max="60" class="inputOnSettingsLightBox" ng-model="ganttSettingDraft.backHorizon" />
							</div>
						</div>

						<div class="GanttSettingsRow">
							<div class="settingLabel">
								{!$Label.Services_per_page}
								<div class="settingExplain">{!$Label.Services_per_page_explanation}</div>
							</div>

							<div class="settingsValues">
								<select class="selectOnSettingsLightbox RightArrowForSelect" ng-model="ganttSettingDraft.servicesPerPage">
									<option value="150">150</option>
									<option value="125">125</option>
									<option value="100">100</option>
									<option value="75">75</option>
									<option value="50">50</option>
								</select>
							</div>
						</div>


						<div class="GanttSettingsRow">
							<div class="settingLabel">
								{!$Label.Resource_row_height}
								<div class="settingExplain">{!$Label.Set_the_height_of_a_row_in_the_gantt_explanation}</div>
							</div>

							<div class="settingsValues">
								<select class="selectOnSettingsLightbox RightArrowForSelect" ng-model="ganttSettingDraft.resourceRowHeight">
									<option value="xsmall">{!$Label.XSmall}</option>
									<option value="small">{!$Label.Small}</option>
									<option value="medium">{!$Label.Medium}</option>
									<option value="large">{!$Label.Large}</option>
								</select>
							</div>
						</div>

						<div class="GanttSettingsRow" ng-if="contractorSupport">
							<div class="settingLabel">
								{!$Label.Filter_contractor_capacities_by_duration_type}
								<div class="settingExplain">{!$Label.Show_only_capcities_with_chosen_duration}</div>
							</div>

							<div class="settingsValues">
								<select class="selectOnSettingsLightbox RightArrowForSelect" ng-model="ganttSettingDraft.capacityDuration">
									<option value="None">{!$Label.None}</option>
									<option value="Day">{!$Label.Daily}</option>
									<option value="Week">{!$Label.Weekly}</option>
									<option value="Month">{!$Label.Monthly}</option>
								</select>
							</div>
						</div>

					</div>


					<div class="lightboxControllers">
						<div class="lightboxSaveButton" ng-click="saveGanttSettings()">{!$Label.Save}</div>
					</div>


				</div>
			</div>

            <!-- action panel -->
            <div id="ActionButtonsContainer" ng-class="{hideList: !showServiceList.show}">
                <div id="OptionsButton" cs-toggle="OptionsContaier"><i class="fa fa-cog"></i></div>
                <div id="OptionsContaier">
                	<div ng-click="openLocationFiltering()" title="{!$Label.Location_filtering}">
						<svg aria-hidden="true" class="slds-icon mainActionIcon">
							 <use xlink:href="{!URLFOR($Resource.LightningDesignSystem, 'assets/icons/utility-sprite/svg/symbols.svg#location')}"></use>
						 </svg>
						{!$Label.Location_filtering}
					</div>
                	<div ng-click="openGanttSettings()" title="{!$Label.Gantt_Settings}">
						<svg aria-hidden="true" class="slds-icon mainActionIcon">
							 <use xlink:href="{!URLFOR($Resource.LightningDesignSystem, 'assets/icons/utility-sprite/svg/symbols.svg#settings')}"></use>
						 </svg>
						{!$Label.Gantt_Settings}
					</div>
                	<div ng-show="!isInConsole()" ng-hide="isLightning()" ng-click="openFullScreen()" title="{!IF(fullScreen,$Label.Exit_full_screen,$Label.Open_full_screen)}">

						<svg aria-hidden="true" class="slds-icon mainActionIcon" ng-show="!fullScreen">
							 <use xlink:href="{!URLFOR($Resource.LightningDesignSystem, 'assets/icons/utility-sprite/svg/symbols.svg#expand_alt')}"></use>
						 </svg>
						<svg aria-hidden="true" class="slds-icon mainActionIcon" ng-show="fullScreen">
							 <use xlink:href="{!URLFOR($Resource.LightningDesignSystem, 'assets/icons/utility-sprite/svg/symbols.svg#contract_alt')}"></use>
						 </svg>
                    	{!IF(fullScreen,$Label.Exit_full_screen,$Label.Open_full_screen)}
					</div>
                </div>

                <div id="PolicySelectContainer">
                    {!$Label.Policy}:
                    <select ng-model="selectedPolicy" ng-change="changePolicy()" ng-options="policy.Name for policy in policyOptions"></select>
                </div>

    			<div class="toggleHandle" id="handleHideServiceList" ng-click="hideServiceList()" title="{!JSENCODE($Label.Hide_service_list)}">
					<i class="fa fa-caret-up"></i>
				</div>
            </div>

            <!-- smart panel -->
            <div id="SmartPanelContainer" ng-class="{hideList: !showServiceList.show}">


                <!-- services list -->
                <div id="TasksListContainer" ng-class="{ hideTasksList:showAdvancedFilter }">
                	<div id="FilteringContainer">
						<div id="FilterOptionsContainer">
	                        <div class="FilterInputContainer">
	                            <select id="PredefinedFilterSelector" class="PredefinedFilterSelect RightArrowForSelect" ng-change ="filterChanged()" ng-model="filter.selectedFilter" ng-options='option.value as option.name for option in filterOptions'></select>
	                        </div>
	                        <span id="createCustomFilterButton" class="globalWhiteButton truncate" title="{!JSENCODE($Label.NewListView)}" ng-click="showAdvancedFilterFunc()">{!$Label.NewListView}</span>
	                    </div>

                    	<div class="FilterDatesContaier">
                    		<div id="FilterDateByProp" class="unselectable" cs-toggle="SelectTimePropertyBox">

								<svg id="TimePropertyBoxIcon" aria-hidden="true" class="slds-icon">
									 <use xlink:href="{!URLFOR($Resource.LightningDesignSystem, 'assets/icons/utility-sprite/svg/symbols.svg#clock')}"></use>
								 </svg>

								<i class="fa fa-caret-down"></i>
							</div>

                            <div id="TaskDates" ng-class="{disabledDates: matchGantt || customFilterSelected || filter.selectedFilter == 'Recent' || filter.selectedFilter == 'Flagged' || filter.selectedFilter == 'Selected' }">

                            	<div tooltip-animation="false" tooltip-popup-delay="500" tooltip-class="horizonTooltip" class="truncate" id="horizonIconWrapper" tooltip-append-to-body="true" tooltip-placement="right" tooltip="{!JSENCODE($Label.Scheduling_horizon_tooltip)}">{!$Label.Horizon}: </div>

                                <span id="DateStart" ng-click="openDateEndCalendar()" ng-model ="filter.endDate" >{{filter.endDate | amDateFormat:'L'}}</span>

								<svg ng-click="openDateEndCalendar()" id="ServiceListCalendar" aria-hidden="true" class="slds-icon">
									 <use xlink:href="{!URLFOR($Resource.LightningDesignSystem, 'assets/icons/standard-sprite/svg/symbols.svg#event')}"></use>
								 </svg>
                            </div>

                            <div id="MatchGantt" ng-class="{disabledDates: customFilterSelected || filter.selectedFilter == 'Recent' || filter.selectedFilter == 'Flagged' || filter.selectedFilter == 'Selected'}">
                            	<input id="matchGanttCheckbox" type="checkbox" ng-disabled="customFilterSelected || filter.selectedFilter == 'Recent' || filter.selectedFilter == 'Flagged' || filter.selectedFilter == 'Selected'" ng-model="matchGantt" ng-click="matchGanttClicked()"></input>
                            	<label for="matchGanttCheckbox" class="truncate" title="{!$Label.Match_Gantt}">{!$Label.Match_Gantt}</label>
                            </div>
                        </div>


                        <div id="SelectTimePropertyBox" ng-click="$event.stopPropagation()">
                        	<div class="timeFieldProp truncate">
								<input type="checkbox" id="timeprop_early" ng-model= "filter.selectedFiled['earlyStart']"/> <label for="timeprop_early">{!$Label.Early_start}</label>
							</div>
                        	<div class="timeFieldProp truncate">
								<input type="checkbox" id="timeprop_due" ng-model= "filter.selectedFiled['dueDate']" /> <label for="timeprop_due">{!$Label.Due_date}</label>
							</div>
                        	<div class="timeFieldProp truncate">
								<input type="checkbox" id="timeprop_app_start" ng-model= "filter.selectedFiled['appStart']"  /> <label for="timeprop_app_start">{!$Label.Appointment_start}</label>
							</div>
                        	<div class="timeFieldProp truncate">
								<input type="checkbox" id="timeprop_app_finish" ng-model= "filter.selectedFiled['appEnd']"/> <label for="timeprop_app_finish">{!$Label.Appointment_finish}</label>
							</div>
                        	<div class="timeFieldProp truncate">
								<input type="checkbox" id="timeprop_start" ng-model= "filter.selectedFiled['start']" /> <label for="timeprop_start">{!$Label.Start_date}</label>
							</div>
                        	<div class="timeFieldProp truncate">
								<input type="checkbox" id="timeprop_finish" ng-model= "filter.selectedFiled['finish']" /> <label for="timeprop_finish">{!$Label.Finish_date}</label>
							</div>

                        	<div id="ExplainTimePropertyBox">
  								{!$Label.Explain_date_selection}
  							</div>
						</div>

	                    <div id="FilterSelectedContainer">
	                    	<div id="selectedServicesTotal" >
	                    		<span class="selectedTotalText truncate" ng-show="filter.totalServices > 0"
									title="{{ '{!JSENCODE($Label.GanttServiceListSelectionText)}' | replaceLabels : filter.firstVisibleService : filter.lastVisibleService : filter.totalServices : selectorService.countSelectedServices() }}">
									{{ '{!JSENCODE($Label.GanttServiceListSelectionText)}' | replaceLabels : filter.firstVisibleService : filter.lastVisibleService : filter.totalServices : selectorService.countSelectedServices() }}
								</span>
	                    		<span class="selectedTotalText truncate" ng-show="filter.totalServices == 0" title="{!$Label.GanttServiceListSelectionTextNoServices}">{!$Label.GanttServiceListSelectionTextNoServices}</span>
		                    	<span class="clearSelected" ng-show="filter.selectedFilter == 'Recent' && filter.totalServices > 0" ng-click="clearRecentlyViewed()">{!$Label.Clear_recently_viewed}</span>
		                    </div>

							<bulk-actions-button></bulk-actions-button>

		                    <div id="serviceSearchsWrapper">
		                        <div class="FilterInputContainer">
		                            <input id="TaskSearchFilterInput" ng-model-options="{ debounce: 200 }" type="text" placeholder="{!JSENCODE($Label.Search_serv_placeholder)}" ng-model="filter.SearchText" cs-stop-propagation="keydown" class="dragTarget"/>
									<svg ng-show="!filter.SearchText" aria-hidden="true" class="slds-icon SearchServiceListIcon">
										 <use xlink:href="{!URLFOR($Resource.LightningDesignSystem, 'assets/icons/utility-sprite/svg/symbols.svg#search')}"></use>
									 </svg>

									<svg ng-click="filter.SearchText = ''" ng-show="filter.SearchText" aria-hidden="true" class="slds-icon ClearServiceListIcon">
										 <use xlink:href="{!URLFOR($Resource.LightningDesignSystem, 'assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
									 </svg>
		                        </div>
	                        </div>
		                </div>
	                </div>

                    <!-- tasks sorting -->
                    <div id="TaskListSorting" class="unselectable">
                        <div id="CheckboxSelectOptions" cs-toggle="SelectTasksBox">
                            <div class="InputCheckboxFake"></div>
                            <i class="fa fa-caret-down"></i>
                        </div>

                        <div id="SelectTasksBox">
                            <div ng-click = "selectorService.selectAll()"><i class="fa fa-check-square-o"></i>{!$Label.All}</div>
                            <div ng-click = "selectorService.unselectAll()"><i class="fa fa-square-o" ></i>{!$Label.None}</div>

							<div ng-click = "selectorService.selectInJeopardy()">
								<svg aria-hidden="true" class="slds-icon SelectMenuIcon">
									 <use xlink:href="{!URLFOR($Resource.LightningDesignSystem, 'assets/icons/utility-sprite/svg/symbols.svg#notification')}"></use>
								 </svg>
								{!$Label.In_Jeopardy}
							</div>

                            <div ng-click = "selectorService.selectViolations()">
								<svg aria-hidden="true" class="slds-icon SelectMenuIcon">
									 <use xlink:href="{!URLFOR($Resource.LightningDesignSystem, 'assets/icons/utility-sprite/svg/symbols.svg#warning')}"></use>
								 </svg>

								{!$Label.Violations}
							</div>

                            <div ng-click = "selectorService.selectUnscheduled()">
                            	<svg aria-hidden="true" class="slds-icon SelectMenuIcon">
									 <use xlink:href="{!URLFOR($Resource.LightningDesignSystem, 'assets/icons/utility-sprite/svg/symbols.svg#question')}"></use>
								 </svg>
                            	{!$Label.UnscheduledCapital}
                            </div>
                        </div>

                        <div id="ServicesListColumns">
                        	<div>
		                        <div ng-attr-title="{{field.Label}}" ng-repeat="field in servicesListFields" ng-class="getHeaderTaskColumnClass(field)" ng-click="filter.reverse=!filter.reverse;order(field.APIName, filter.reverse)">{{field.Label}}
		                        	<span ng-show ="filter.orderByField == field.APIName" class="arrow-container-field-something">
		                        		<span>
				                        	<svg ng-show ="!filter.reverse" aria-hidden="true" class="slds-icon">
											  <use xlink:href="{!URLFOR($Resource.LightningDesignSystem, 'assets/icons/utility-sprite/svg/symbols.svg#arrowup')}"></use>
											</svg>
											<svg ng-show ="filter.reverse" aria-hidden="true" class="slds-icon">
											  <use xlink:href="{!URLFOR($Resource.LightningDesignSystem, 'assets/icons/utility-sprite/svg/symbols.svg#arrowdown')}"></use>
											</svg>
										</span>
		                        	</span>
		                        </div>
	                        </div>
                        </div>

                    </div>
                    <div id="TaskListItems">

                  		<div class="NoServicesFound" ng-show="filteredServices.servicesArray == 0">
                  			<i ng-show="filter.selectedFilter != 'Todo'" class="fa fa-times"></i>
                  			<div ng-show="filter.selectedFilter != 'Todo'" >{!$Label.No_services}</div>
                  			<span ng-show="filter.selectedFilter != 'Todo'" >{!$Label.Refine_filter}</span>

                  			<i ng-show="filter.selectedFilter == 'Todo'" class="fa fa-smile-o"></i>
                  			<div ng-show="filter.selectedFilter == 'Todo'" >{!$Label.Nothing_to_do}</div>
                  			<span ng-show="filter.selectedFilter == 'Todo'" >{!$Label.Keep_up_the_good_work}</span>
                  		</div>



                        <div ng-class="{firstServiceIfSelection: $first}" class="unselectable draggableService singleServiceBigContainer" ng-repeat="(key,service) in filteredServices.servicesArray = (servicesObjects() | servicesListFilter:filter:servicesListFields | pagination:filter.currentPage:filter.servicesPerPage) track by key" drag-service="service">
                            <div draggable="{{ isDraggable(service.id) }}"
								 class="SingleTask"
								 ng-click="selectService(service.id)"
								 ng-class="{'DraggableSingleTask': isDraggable(service.id),
								  			'selectedSingleTask': service.id == selectedServiceId,
								  			'serviceList_TaskJeopardy': service.jeopardy && service.id != selectedServiceId,
								  			'serviceList_TaskViolations': !service.jeopardy && service.violations && service.id != selectedServiceId}">

                                <div class="SingleTaskCheckboxAndColor" for="{{service.id}}">
                                    <div title="{{ service.status }}" ng-style="{background: service.ganttColor}" class="TaskStatusColor {{ getStatusClass(service) }} ServiceListCustomColor_{{ removeSpaces(service.status) }}" >
                                    </div>

                                    <input ng-model="servicesSelection[service.id]" cs-stop-propagation="click" type="checkbox" id ="{{service.id}}"/>

                                    <span class="serviceStatusIcon"
                                    		title="{{ violationsTooltip(service) }}"
                                    		ng-class="{'serviceList_jeopardy': service.jeopardy, 'serviceList_violations': !service.jeopardy && service.violations}">

										<svg aria-hidden="true" class="slds-icon JeopardyOnList" ng-if="service.jeopardy">
											 <use xlink:href="{!URLFOR($Resource.LightningDesignSystem, 'assets/icons/utility-sprite/svg/symbols.svg#notification')}"></use>
										 </svg>

										<svg aria-hidden="true" class="slds-icon ViolationsOnList" ng-if="service.violations && !service.jeopardy">
											 <use xlink:href="{!URLFOR($Resource.LightningDesignSystem, 'assets/icons/utility-sprite/svg/symbols.svg#warning')}"></use>
										 </svg>

										<svg aria-hidden="true" class="slds-icon MDTIconOnList" ng-if="service.isMDT && !service.jeopardy && !service.violations">
											 <use xlink:href="{!URLFOR($Resource.LightningDesignSystem, 'assets/icons/utility-sprite/svg/symbols.svg#clock')}"></use>
										 </svg>
										<svg aria-hidden="true" class="slds-icon MDTIconOnList MDTArrowIconOnList" ng-if="service.isMDT && !service.jeopardy && !service.violations">
											 <use xlink:href="{!URLFOR($Resource.LightningDesignSystem, 'assets/icons/utility-sprite/svg/symbols.svg#forward')}"></use>
										 </svg>

                                    </span>
                                </div>

                                <div ng-attr-title="{{service | displayFieldSetField : field}}" ng-repeat="field in servicesListFields" ng-class="{{getSingleTaskColumnClass(field)}}">
									{{service | displayFieldSetField : field}}
								</div>
							</div>



                            <div class="SingleTaskQuickActionsContainer" ng-class="{ShowQuickActions: service.id == selectedServiceId}">

                            	<div class="ExtraInfoQuickAction">
                            		<div class="ExtraInfoContinaer" ng-repeat="pair in clickedServiceFieldPairs">
                            			<div class="truncate" ng-repeat="field in pair">
											<div class="extra-info-title" title="{{field.Label}}">{{field.Label}}</div>
											<span class="extra-info-content" ng-show="field.Type != fieldsTypes.Reference" title="{{service | displayFieldSetField : field}}">{{service | displayFieldSetField : field}}</span>
											<span ng-show="isFieldEmpty(service, field)">-</span>
											<a draggable="false" ng-show="field.Type == fieldsTypes.Reference" ng-click="openConsoleTab($event, getRefFieldID(service, field))" target="_blank" href="../{{ getRefFieldID(service, field) }}" title="{{service | displayFieldSetField : field}}">{{service | displayFieldSetField : field}}</a>
										</div>
									</div>
								</div>


								<div class="allQuickActionsContainer" ng-if="service.id == selectedServiceId || service.id == lastSelectedServiceId">
									<div class="quickActionsPadding"></div>
									<ul class="QuickActions" ng-if="service.id == selectedServiceId || service.id == lastSelectedServiceId">
										<li>
											<div id="quickActionFlag" class="quickActionBtn" ng-click="flagging(service.id)" title="{{ flagged[service.id] ? '{!JSENCODE($Label.Unflag)}' : '{!JSENCODE($Label.Flag)}' }}">
												<svg aria-hidden="true" class="slds-icon quickActionIcon" ng-class="{emptyFlag: flagged[service.id] == true}">
													 <use xlink:href="{!URLFOR($Resource.LightningDesignSystem, 'assets/icons/utility-sprite/svg/symbols.svg#priority')}"></use>
												 </svg>
												  <span>{{ flagged[service.id] ? '{!JSENCODE($Label.Unflag)}' : '{!JSENCODE($Label.Flag)}' }}</span>
											</div>
											<div class="quickActionBtn moreQuickActionsBtn" cs-group-actions="cs-group-actions">
												<i class="fa fa-caret-down viewMoreCaret"></i>
											</div>
										</li>

										<li ng-show="!service.pinned && service.status != statuses.COMPLETED && service.status != statuses.CANCELED && !isPinnedStatus(service.status) && hasCustomPermission('Schedule')">
											<div class="quickActionBtn quickActionGoLeft" ng-click="autoScheduleService(service.id)"  title="{{ service.isScheduled() ? '{!JSENCODE($Label.Reschedule)}' : '{!JSENCODE($Label.Schedule)}' }}">
												<svg aria-hidden="true" class="slds-icon quickActionIcon" ng-show="(invokedAction[service.id] != 'schedule')">
													 <use xlink:href="{!URLFOR($Resource.LightningDesignSystem, 'assets/icons/utility-sprite/svg/symbols.svg#event')}"></use>
												 </svg>
												<img class="quickActionLoading"
													 src="{!URLFOR($Resource.LightningDesignSystem, 'assets/images/spinners/slds_spinner.gif')}"
													 ng-show="(invokedAction[service.id] == 'schedule') && (invokedActionFor[service.id])"/>

												<span>{{ service.isScheduled() ? '{!JSENCODE($Label.Reschedule)}' : '{!JSENCODE($Label.Schedule)}' }}</span>
											</div>
											<div class="quickActionBtn moreQuickActionsBtn" cs-group-actions="cs-group-actions">
												<i class="fa fa-caret-down viewMoreCaret"></i>
											</div>
										</li>

										<li ng-show="!service.pinned && service.status != statuses.COMPLETED && service.status != statuses.CANCELED && !isPinnedStatus(service.status)">
											<div class="quickActionBtn quickActionGoLeft" ng-click="getSlots(service.id)"  title="{!$Label.Candidates}">
												<svg aria-hidden="true" class="slds-icon quickActionIcon">
													 <use xlink:href="{!URLFOR($Resource.LightningDesignSystem, 'assets/icons/utility-sprite/svg/symbols.svg#people')}"></use>
												 </svg>
												 <span>{!$Label.Candidates}</span>
											</div>
											<div class="quickActionBtn moreQuickActionsBtn" cs-group-actions="cs-group-actions">
												<i class="fa fa-caret-down viewMoreCaret"></i>
											</div>
										</li>
										<li>
											<div class="quickActionBtn quickActionGoLeft" ng-click="openLightBox(service.id)" title="{!$Label.Edit}">
												<svg aria-hidden="true" class="slds-icon quickActionIcon">
													 <use xlink:href="{!URLFOR($Resource.LightningDesignSystem, 'assets/icons/utility-sprite/svg/symbols.svg#edit')}"></use>
												 </svg>
												<span>{!$Label.Edit}</span>
											</div>


											<div class="quickActionBtn moreQuickActionsBtn" cs-group-actions="cs-group-actions" cs-last-action="edit" ng-show="service.latitude && service.longitude || service.isScheduled()">
												<i class="fa fa-caret-down viewMoreCaret"></i>

											</div>
										</li>

										
										<li ng-show="!service.pinned && hasCustomPermission('Reshuffle')">
											<div class="quickActionBtn quickActionGoLeft" ng-click="scheduleAndReshuffle(service.id)" title="{!$Label.Reshuffle}">
												<svg aria-hidden="true" class="slds-icon quickActionIcon" ng-show="(invokedAction[service.id] != 'reshuffle')">
													 <use xlink:href="{!URLFOR($Resource.LightningDesignSystem, 'assets/icons/utility-sprite/svg/symbols.svg#retweet')}"></use>
												 </svg>
												<img class="quickActionLoading"
													 src="{!URLFOR($Resource.LightningDesignSystem, 'assets/images/spinners/slds_spinner.gif')}"
													 ng-show="(invokedAction[service.id] == 'reshuffle') && (invokedActionFor[service.id])"/>
												<span>{!$Label.Reshuffle}</span>
											</div>

											<div class="quickActionBtn moreQuickActionsBtn" cs-group-actions="cs-group-actions" cs-last-action="reshuffle" >
												<i class="fa fa-caret-down viewMoreCaret"></i>

											</div>
										</li>

										<li ng-show="service.isScheduled() && (service.latitude && service.longitude) && hasCustomPermission('Group_Nearby')">
											<div class="quickActionBtn quickActionGoLeft" ng-click="groupNearby(service.id)" title="{!$Label.GroupNearBy}">
												<svg aria-hidden="true" class="slds-icon quickActionIcon " ng-show="(invokedAction[service.id] != 'GroupNearby')">
													 <use xlink:href="{!URLFOR($Resource.LightningDesignSystem, 'assets/icons/utility-sprite/svg/symbols.svg#contract')}"></use>
												 </svg>
												<img class="quickActionLoading"
													 src="{!URLFOR($Resource.LightningDesignSystem, 'assets/images/spinners/slds_spinner.gif')}"
													 ng-show="(invokedAction[service.id] == 'GroupNearby') && (invokedActionFor[service.id])"/>
												<span>{!$Label.GroupNearBy}</span>
											</div>

											<div class="quickActionBtn moreQuickActionsBtn" cs-group-actions="cs-group-actions" cs-last-action="groupNearby">
												<i class="fa fa-caret-down viewMoreCaret"></i>
											</div>
										</li>


										<li ng-show="!service.pinned && service.status == statuses.SCHEDULED">
											<div class="quickActionBtn quickActionGoLeft" ng-click="changeStatusToDispatch(service.id)" title="{!$Label.Dispatch}">
												<svg aria-hidden="true" class="slds-icon quickActionIcon" ng-show="(invokedAction[service.id] != 'dispatch')">
													 <use xlink:href="{!URLFOR($Resource.LightningDesignSystem, 'assets/icons/utility-sprite/svg/symbols.svg#setup_assistant_guide')}"></use>
												 </svg>
												<img class="quickActionLoading"
													 src="{!URLFOR($Resource.LightningDesignSystem, 'assets/images/spinners/slds_spinner.gif')}"
													 ng-show="(invokedAction[service.id] == 'dispatch') && (invokedActionFor[service.id])"/>
												<span>{!$Label.Dispatch}</span>
											</div>

											<div class="quickActionBtn moreQuickActionsBtn" cs-group-actions="cs-group-actions" cs-last-action="dispatch" >
												<i class="fa fa-caret-down viewMoreCaret"></i>

											</div>
										</li>

										

										<li ng-show ="service.isScheduled()">
											<div class="quickActionBtn quickActionGoLeft" ng-click="showOnGantt(service)" title="{!$Label.Gantt}">
												<svg aria-hidden="true" class="slds-icon quickActionIcon">
													 <use xlink:href="{!URLFOR($Resource.LightningDesignSystem, 'assets/icons/utility-sprite/svg/symbols.svg#table')}"></use>
												 </svg>
												<span>{!$Label.Gantt}</span>
											</div>

											<div class="quickActionBtn moreQuickActionsBtn" cs-group-actions="cs-group-actions" cs-last-action="gantt" ng-show="isMapEnabled && (service.latitude && service.longitude)">
												<i class="fa fa-caret-down viewMoreCaret"></i>

											</div>
										</li>
										<!--ng-if="mapMode.on"-->
										<li>
											<div id="quickActionMap" class="quickActionBtn quickActionGoLeft" ng-click="showOnMap(service.id)" ng-show="isMapEnabled && (service.latitude && service.longitude)" title="{!$Label.Map}">
												<svg aria-hidden="true" class="slds-icon quickActionIcon">
													 <use xlink:href="{!URLFOR($Resource.LightningDesignSystem, 'assets/icons/utility-sprite/svg/symbols.svg#world')}"></use>
												 </svg>
												 <span>{!$Label.Map}</span>
											</div>
										</li>
									</ul>
									<div class="quickActionsPadding"></div>
								</div>
						</div>
					</div>


                    </div>

                    	<div id="TaskListPagination" ng-show="filteredServices.servicesArray != 0">
	                    	<!-- <span id="change-page-first" class="change-page" ng-class="{changePageDisabled: filter.currentPage == 1}" ng-click="changePage('first')"><i class="fa fa-angle-double-left"></i></span> -->
	                    	<span id="change-page-left" class="change-page" ng-class="{changePageDisabled: filter.currentPage == 1}" ng-click="changePage('left')"><i class="fa fa-angle-left"></i></span>
							<select ng-model="filter.currentPage">
								<option ng-repeat="i in createArray(filter.totalServices,filter.servicesPerPage) track by $index" value="{{$index + 1}}" ng-bind="{{$index + 1}}"></option>
							</select>
	                    	<span id="change-page-right" class="change-page" ng-class="{changePageDisabled: filter.totalPages == filter.currentPage}" ng-click="changePage('right')"><i class="fa fa-angle-right"></i></span>
	                    	<!-- <span id="change-page-last" class="change-page" ng-class="{changePageDisabled: filter.totalPages == filter.currentPage}" ng-click="changePage('last')"><i class="fa fa-angle-double-right"></i></span> -->
                    	</div>

                </div>

                <!-- advanced filtering -->
                <div id="AdvancedFilteringOptions" ng-class="{ showAdvancedFiltering:showAdvancedFilter }">

 	               	<h2>
 	               		{!$Label.NewListView}
						<div class="SmartPanelBackButton" ng-click="hideAdvancedFilterFunc()">
							<svg aria-hidden="true" class="slds-icon backToServices">
								 <use xlink:href="{!URLFOR($Resource.LightningDesignSystem, 'assets/icons/utility-sprite/svg/symbols.svg#back')}"></use>
							 </svg>
	                    	{!$Label.Back_to_services}
                    	</div>
 	               	</h2>
                	<div class="AdvacedFilterSection">

	                    <div class="SmartPanelH1" style="font-size: 12px;">

		                    <div id="customFilterButtonsPane">
		                    	<span id="displayNew" class="customFilterActionButton globalWhiteButton" ng-show="displayNew" ng-click ="createCustomFilter()">
		                    		<svg aria-hidden="true" class="slds-icon">
										 <use xlink:href="{!URLFOR($Resource.LightningDesignSystem, 'assets/icons/utility-sprite/svg/symbols.svg#new')}"></use>
									 </svg>
		                    		<span class="FilterPropertyAdvancedRow dateSelctor"> {!$Label.New}</span>
			                    </span>

		                    	<span id="displaySave" class="customFilterActionButton globalWhiteButton" ng-show="displaySave" ng-click ="saveCustomFilter()">
		                    		<svg aria-hidden="true" class="slds-icon">
										 <use xlink:href="{!URLFOR($Resource.LightningDesignSystem, 'assets/icons/utility-sprite/svg/symbols.svg#success')}"></use>
									 </svg>
		                    		<span class="FilterPropertyAdvancedRow dateSelctor"> {!$Label.Save}</span>
		                    	</span>

								<span id="displayCancel" class="customFilterActionButton globalWhiteButton" ng-show="displayCancel" ng-click ="CancelSaveOrEditCustomFilter()">
		                    		<svg aria-hidden="true" class="slds-icon">
										 <use xlink:href="{!URLFOR($Resource.LightningDesignSystem, 'assets/icons/utility-sprite/svg/symbols.svg#clear')}"></use>
									 </svg>
		                    		<span class="FilterPropertyAdvancedRow dateSelctor"> {!$Label.Cancel}</span>
		                    	</span>

		  						<span id="displayCancel" class="customFilterActionButton globalWhiteButton" ng-show="displayEdit" ng-click = "EditCustomFilter()">
		                    		<svg aria-hidden="true" class="slds-icon">
										 <use xlink:href="{!URLFOR($Resource.LightningDesignSystem, 'assets/icons/utility-sprite/svg/symbols.svg#edit')}"></use>
									 </svg>
		  							<span  class="FilterPropertyAdvancedRow dateSelctor"  >{!$Label.Edit}</span>
		  						</span>

		                    	<span id="displayDelete" class="customFilterActionButton globalWhiteButton" ng-show="displayDelete" ng-click = "deleteCustomFilter()">
		                    		<svg aria-hidden="true" class="slds-icon">
										 <use xlink:href="{!URLFOR($Resource.LightningDesignSystem, 'assets/icons/utility-sprite/svg/symbols.svg#delete')}"></use>
									 </svg>
		  							<span  class="FilterPropertyAdvancedRow dateSelctor"  > {!$Label.Delete}</span>
		  						</span>
		  					</div>

	                    	<input ng-click="showDropdownCustomFilters($event)" ng-class="{disabled: storageFilters.length == 0 && IsCustomFilterReadonly}" ng-readonly="IsCustomFilterReadonly" id="CustomFilterName" type="text" ng-model="customFilterName" value="{!$Label.Custom_Filter}"/>
	                    	<div ng-show="DisplayComboBowArrow" id="DropdownArrowCustomFilter"><i class="fa fa-caret-down"></i></div>

							<!-- <span ng-show="customFilterName == 'Custom filter' && customFilterName.length>0"> -->

	                    </div>

	                    <div ng-show="showCustomFilterDropdown" ng-click="showCustomFilterDropdown = false" id="CustomFiltersNamesDropdown">
	                    	<div ng-repeat = "customFilter in storageFilters track by $index " ng-click ="customFilterChanged(customFilter.name)">{{customFilter.name}}</div>
	                    </div>

	                    {!$Label.CustomFilterExplain}

                    </div>


					<h2>{!$Label.Status}</h2>
					<div class="AdvacedFilterSection">
						<p>{!$Label.Services_With_these_statuses}</p>

						<div ng-repeat="(key,value) in statusTranslations" class="StatusAdvancedFilter truncate" >
							<input ng-disabled="IsCustomFilterReadonly" type="checkbox"  ng-model = "filter.advancedFilter.statusCheckboxs[value]" />
							<label ng-click="toggleStatus(key, value)" for="" ng-bind="value"></label>
						</div>
					</div>




					<h2>{!$Label.Services_Properties}</h2>
					<div class="AdvacedFilterSection">
						<div ng-class="{FilterPropertyAdvancedRow: true}" >{!$Label.Minimum_start_date}: <u ng-click = "openCalendarAdvanceFilterStart()" ng-class="{dateSelctor: true, disabledDates: IsCustomFilterReadonly}" id ="calendarMin">{{filter.advancedFilter.minDate| amDateFormat:'L'}}</u></div>
				<div ng-class="{FilterPropertyAdvancedRow: true}" >{!$Label.Maximum_end_date}: <u ng-click = "openCalendarAdvanceFilterFinish()" ng-class="{dateSelctor: true, disabledDates: IsCustomFilterReadonly}" id ="calendarMax" >{{filter.advancedFilter.maxDate| amDateFormat:'L'}}</u></div>

				<div class="FilterPropertyAdvancedRow" id="minPrioritySelect">
					<div class="filterPropertyName" >{!$Label.Minimum_service_priority}:</div>
					<!--<div class="filterProperyValue"><input ng-disabled="IsCustomFilterReadonly" class="minimumPriority" type="number"  ng-model ="filter.advancedFilter.servicePriority" /></div>-->
					<input type="number" ng-model="filter.advancedFilter.servicePriority" class="filterProperyValue minimumPriority"  ng-disabled="IsCustomFilterReadonly"></input>
				</div>

				<div class="FilterPropertyAdvancedRow">
					<div class="filterPropertyName">{!$Label.Show_unscheduled}:</div>
					<div class="filterProperyValue"><input ng-disabled="IsCustomFilterReadonly" type="checkbox" ng-model ="filter.advancedFilter.unScheduled"/></div>
				</div>

				<div class="FilterPropertyAdvancedRow">
					<div class="filterPropertyName">{!$Label.Show_services_with_violations}:</div>
					<div class="filterProperyValue"><input ng-disabled="IsCustomFilterReadonly" type="checkbox"  ng-model ="filter.advancedFilter.violations" /></div>
				</div>

				<div class="FilterPropertyAdvancedRow">
					<div class="filterPropertyName">{!$Label.Show_jeopardies}:</div>
					<div class="filterProperyValue"><input ng-disabled="IsCustomFilterReadonly" type="checkbox"  ng-model ="filter.advancedFilter.jeopardies"/></div>
				</div>
			</div>



			<h2>{!$Label.Location}</h2>
			<div class="AdvacedFilterSection">
				<div class="LocationAdvancedFilter truncate" style="display: block;">
					<input ng-disabled="IsCustomFilterReadonly" type="checkbox" ng-model = "filter.advancedFilter.noLocation" />
					<label ng-click="toggleLocation(null)">{!$Label.Custom_Filter_No_Location}</label>

				</div>

				<div ng-repeat="territory in territories" class="LocationAdvancedFilter truncate">
					<input ng-disabled="IsCustomFilterReadonly" type="checkbox" ng-model = "filter.advancedFilter.locationsCheckboxs[territory.name]" />
					<label ng-click="toggleLocation(territory.name)">{{territory.name}}</label>
				</div>
			</div>


                </div>


            </div>

        </div>



        <div id="RightSideContainer" class="unselectable ng-cloak split split-horizontal" ng-controller="ctrlRightSide" ng-class="{expandGantt100: !showServiceList.show}">


            <!-- The top row, above the gantt/map with tabs and KPIs -->
            <div id="ControllersForMapAndGantt">

                <div id="MainViewTabContainer">
                	<!-- <i class="fa fa-caret-right" ng-show="!showServiceList.show" ng-click="toggleServiceList()"></i> -->
	    			<div class="toggleHandle" id="handleShowServiceList" ng-show="!showServiceList.show" ng-click="toggleServiceList()">
						<i class="fa fa-caret-up"></i>
					</div>
                    <div class="MainViewTab" ng-click="workingState = 'gantt'" ng-class="{NOTSelectedMainTab: workingState != 'gantt'}">{!$Label.Gantt}</div>
                    <div ng-show="isMapEnabled" class="MainViewTab" ng-click="workingState = 'map'" ng-class="{NOTSelectedMainTab: workingState != 'map'}">{!$Label.Map}</div>
                </div>

                <div class="iconNearTabs" id="ButlerButton" cs-toggle="ButlerContainer" ng-click="showNotifications(); openSomethingBox($event,'butler');">
					<i class="fa" id="butler" ng-class="{'fa-envelope-o': calcUnreadNotifications() == 0, 'fa-envelope': calcUnreadNotifications() > 0}"></i>
					<div ng-show="calcUnreadNotifications() > 0" id="butlerNotificationsCounter" ng-bind="calcUnreadNotifications()"></div>
				</div>

				<div class="iconNearTabs" id="SmartThingButton" cs-toggle="SmartContainer" ng-click="showNotifications(); openSomethingBox($event,'smart');">
					<i class="fa fa-lightbulb-o"></i>
					<div ng-show="getNumOfRunningRequests() > 0" class="smart-running">{{getNumOfRunningRequests()}}</div>
				</div>


				<div id="ButlerContainer" style="margin-left:{{marginLeftForBox}}px !important">

					<div class="BoxContainerWrapper">
						<div class="NoNotificationsMessage" ng-show='notifications.length == 0'>{!$Label.No_notifications}</div>

						<div ng-repeat="n in notifications | orderBy:'when':true" class="SingleNotificationContainer" ng-click="n.action(n.param)" ng-class="{cursorPointer: n.action}">
							<h1 ng-bind="n.title"></h1>
							<span safe-binder="n.text"></span>
							<div class="notificationDateAdded">{{ n.when | amDateFormat:'lll' }}</div>
						</div>
					</div>
				</div>

				<div id="SmartContainer" style="margin-left:{{marginLeftForBox}}px !important">
					<div class="BoxContainerWrapper">

						<div class="NoNotificationsMessage" ng-show="(optimizationRequsts | toArray).length === 0">{!$Label.norecentoptimizaion}</div>

						<div ng-repeat="request in optimizationRequsts | toArray | orderBy:'lastModifiedDate':true" class="SingleNotificationContainer" ng-click="openSObjectLink(request.id)">
							<h1>{{request.type}}</h1>
							<span class="smart_info" title="{{ request.failureReason.length > 0 ? request.failureReason : request.result }}">{{ request.failureReason.length > 0 ? request.failureReason : request.result }}</span>
							<span class="smart_status {{getRequestCss(request.status)}}">{{request.status}}</span>
							<div class="notificationDateAdded">{{ request.lastModifiedDate | amDateFormat:'lll' }}</div>
						</div>
					</div>
				</div>

                <div ng-show="activeRequests.active > 0" id="activeRequests">
                	{!$Label.Loading}
                </div>


                <!-- kpi indicators -->
                <div id="ServicesIndicators" ng-show="workingState === 'gantt'">

               		<div class="IndicatorNumber OtherIndicatorKPI scheduledKpi" title="{!$Label.TotalScheduledTooltip}">
						<svg aria-hidden="true" class="slds-icon kpiIcon ">
							 <use xlink:href="{!URLFOR($Resource.LightningDesignSystem, 'assets/icons/utility-sprite/svg/symbols.svg#clock')}"></use>
						 </svg>

						{{ formatTravel(kpi.totalScheduledDuration) }}
               		</div>

               		<div ng-show="isMapEnabled" class="IndicatorNumber OtherIndicatorKPI" title="{!$Label.averageTravelTooltip}">
						<svg aria-hidden="true" class="slds-icon kpiIcon travelKpi">
							 <use xlink:href="{!URLFOR($Resource.LightningDesignSystem, 'assets/icons/custom-sprite/svg/symbols.svg#custom31')}"></use>
						 </svg>

                		{{ formatTravel(kpi.avgTravelTime * 60) }}
                	</div>

                    <div class="IndicatorNumber CompletedIndicator" title="{!$Label.CompletedKpiTooltip}">
						<svg aria-hidden="true" class="slds-icon kpiIcon">
							 <use xlink:href="{!URLFOR($Resource.LightningDesignSystem, 'assets/icons/utility-sprite/svg/symbols.svg#success')}"></use>
						 </svg>
						{{ kpi.completed }}/{{ kpi.total }}
					</div>

                    <div class="IndicatorNumber WarningIndicator" title="{!$Label.Violations}">
						<svg aria-hidden="true" class="slds-icon kpiIcon">
							 <use xlink:href="{!URLFOR($Resource.LightningDesignSystem, 'assets/icons/utility-sprite/svg/symbols.svg#warning')}"></use>
						 </svg>

						{{ kpi.violations }}</div>
                    <div class="IndicatorNumber JeopardyIndicator" title="{!$Label.InJeopardyKpiTooltip}">
						<svg aria-hidden="true" class="slds-icon kpiIcon">
							 <use xlink:href="{!URLFOR($Resource.LightningDesignSystem, 'assets/icons/utility-sprite/svg/symbols.svg#notification')}"></use>
						 </svg>
						{{ kpi.jeopardy }}</div>
                </div>

            </div>

            <!-- Map view -->
            <apex:outputPanel rendered="{!mapMode == '1' && dontShowMapBecauseChina == false}">
			<div id="MapContainer" ng-show="workingState == 'map'" ng-if="isMapEnabled">
				<div ng-controller="ctrlMap" ng-class="{ hideController : hideMap() }" style=" position: relative; height: 100%; ">
					<section id="map">

						<google-places my-map='map' search-marker='searchMarker' class="GooglePlacesFreeText"></google-places>
						<div id="mapButtons">
							<div id="mapOptionsButton" class="truncate" ng-click="mapOptionsToggle = !mapOptionsToggle" ng-init="mapOptionsToggle = false" title="{!$Label.Map_Layers}">{!$Label.Map_Layers}
								<i class="fa fa-caret-down"></i></div>
							<div ng-click="trafficLayerEnabled = !trafficLayerEnabled" id="trafficFilter" ng-class="{activeButton: trafficLayerEnabled}">
								{!$Label.Traffic}
							</div>
						</div>
						<div id="mapOptionsContainer" ng-show="mapOptionsToggle" ng-click="$event.stopPropagation()" ng-init="pinsOnMap = true; filterReports = false;">
							<div class="lightning-tabs">
								<div ng-class="{'tab-selected': pinsOnMap}" class="truncate" ng-click="pinsOnMap = true; filterResources = false; filterReports = false; filterPolygons = false;" title="{!$Label.PinsOnMap}">{!$Label.PinsOnMap}</div>
								<div ng-class="{'tab-selected': filterResources}" class="truncate" ng-click="filterResources = true; pinsOnMap = false; filterReports = false; filterPolygons = false;" title="{!$ObjectType.ServiceResource.labelPlural}">{!$ObjectType.ServiceResource.labelPlural}</div>
								<div ng-class="{'tab-selected': filterReports}"  class="truncate" ng-click="filterReports = true; pinsOnMap = false; filterResources = false; filterPolygons = false;" title="{!$Label.Reports}">{!$Label.Reports}</div>
								<div ng-class="{'tab-selected': filterPolygons}"  class="polygonsTab truncate" ng-click="filterPolygons = true; pinsOnMap = false; filterResources = false; filterReports = false;" title="{!$Label.Polygons}" ng-show="hasCustomPermission('Polygons_view')">{!$Label.Polygons}</div>
							</div>
							<div id="mapOptionsContent">

								<div id="pinsOnMap" ng-show="pinsOnMap">

									{!$Label.ChooseWitchObjectToSeeMap}<br/>

									<input ng-model="showLivePositions" ng-change="redrawAllMarkers()" type="checkbox" id="LivePositionsFilter"></input>
									<label for="LivePositionsFilter">{!$Label.Live_Positions}</label><br/>

									<input ng-model="showResources" ng-change="redrawAllMarkers()" type="checkbox" id="HomeBastFilter"></input>
									<label for="HomeBastFilter">{!$Label.Homebase}</label><br/>

									<input ng-model="showServices" ng-change="redrawAllMarkers()" type="checkbox" id="ServicesFilter"></input>
									<label for="ServicesFilter">{!$Label.services_capital}</label><br/>

									<input ng-model="showTerritories" ng-change="redrawAllMarkers()" type="checkbox" id="TerritoryFilter"></input>
									<label for="TerritoryFilter">{!$Label.ServiceTerritories}</label><br/>
								</div>


								<div id="mapResourceFilter" ng-show="filterResources">
									<div id="mapResourceContainer">
										<div id="resourceSelectCont" class="mapLayersSelectContainer">
											<input type="text" id="resourceInput" typeahead-wait-ms="100" ng-model="filterResourceInputValue" typeahead="resource as resource.label for resource in resourcesFilterList | filter:{label:$viewValue} | limitTo:8" placeholder="{!$Label.SearchResources}" />
											<svg aria-hidden="true" class="slds-icon clearMapResourceSearch" ng-show="filterResourceInputValue != ''" ng-click="filterResourceInputValue = ''">
												 <use xlink:href="{!URLFOR($Resource.LightningDesignSystem, 'assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
											 </svg>
											<div id="showResourceOnMap" class="truncate" ng-click="addResourceToFilterList()">
												<span>{!$Label.Show_on_map}</span>
											</div>
										</div>

										<div id="mapResourcesList">
											<div class="mapFilterExplain" ng-show="isEmpty(filteredResources)">{!$Label.Showing_all_resources}</div>
											<div class="singleReportRow" ng-repeat="(key, resource) in filteredResources">
												<span class="resourceRowName">{{filteredResources[key].name}}</span>
												<span class="reportRemove" ng-click="clearResource(key)">{!$Label.Remove}</span>
											</div>
											<div class="mapRemoveAll" ng-show="!isEmpty(filteredResources)" ng-click="clearAllResources()">{!$Label.Remove_All}</div>
										</div>
									</div>
								</div>
								<div id="mapReportFilter" ng-show="filterReports">
									<div id="mapReportContainer">
										<div id="reportSelectCont" class="mapLayersSelectContainer">
											<select ng-model="selectedReport" class="reportSelector DropdownTriangle">
												<option value="null">{!$Label.Select_Report}</option>
												<option ng-repeat="(key, report) in reports" value="{{ report.Id }}" ng-bind="report.Name"></option>
											</select>

											<div id="showReportOnMap" class="truncate" ng-click="showReportOnMap()">
												<span>{!$Label.Add_Layer}</span>
											</div>
										</div>

										<div id="reportsList">
											<div class="mapFilterExplain" ng-show="isEmpty(reportsData)">{!$Label.Tabular_reports_explain}</div>
											<div class="singleReportRow" ng-repeat="(key, existingReport) in reportsData">
												<span class="reportName" ng-class="{hiddenReport: !existingReport.show}">{{reports[key].Name}}</span>
												<span class="reportMarkersCount" ng-class="{hiddenReport: !existingReport.show}" title="{{reportsData[key].displayCount}} / {{reportsData[key].data.length}}">({{reportsData[key].displayCount}})</span>
												<span class="reportToggle" ng-click="toggleReportMarkers(key)">
													<span ng-show="!existingReport.show">{!$Label.Show}</span>
													<span ng-show="existingReport.show">{!$Label.Hide}</span>
												</span>
												<span class="reportRemove" ng-click="removeReportFromMap(key)">{!$Label.Remove}</span>
											</div>
											<div class="mapRemoveAll" ng-show="!isEmpty(reportsData)" ng-click="removeAllReportsFromMap()">{!$Label.Remove_All}</div>
										</div>
									</div>
								</div>
								<div id="polygonFilter" ng-show="filterPolygons">
									<div class="mapPolygonsContainer">
										<div class="mapLayersSelectContainer">
											<input type="text" id="newPolygonName" ng-model="polygonName" placeholder="{!$Label.Polygon_name}" ng-disabled="drawState != drawingStates.EDIT && drawState != drawingStates.DRAW"/>
											<div class="editPolygonOptions" ng-show="drawState == drawingStates.NONE || drawState == drawingStates.SELECTED || drawState == drawingStates.INTERSECT"
											ng-if="hasCustomPermission('Polygons_create_update')">
												<div id="toggleDrawing" class="truncate" ng-class="{disabledButton: drawState != drawingStates.NONE && drawState != drawingStates.SELECTED}" ng-click="toggleDrawMode()">
													<span>{!$Label.New}</span>
												</div>
												<div id="toggleEdit" class="truncate" ng-class="{disabledButton: drawState != drawingStates.SELECTED}" ng-click="editPolygon()">
													<span>{!$Label.Edit}</span>
												</div>
											</div>
											<cs-color-picker></cs-color-picker>
											
											<div class="editPolygonOptions" ng-show="drawState != drawingStates.NONE && drawState != drawingStates.SELECTED && drawState != drawingStates.INTERSECT">
												<div id="savePolygon" class="truncate mapIconButton" ng-click="savePolygon()" title="Save">
													<span>{!$Label.Save}</span>
												</div>
												<div id="cancelPolygon" class="truncate mapIconButton" ng-click="cancelPolygon()" title="Cancel">
													<span>{!$Label.Cancel}</span>
												</div>
											</div>
											<div class="polygonTerritory" >
												<select ng-model="polygonTerritory" ng-disabled="drawState != drawingStates.EDIT && drawState != drawingStates.DRAW">
													<option value="null">{!$Label.Select_Service_Territory}</option>
													<option ng-repeat="(key, value) in territories" value="{{key}}">{{value.name}}</option>
												</select>
											</div>
											<div id="deletePolygon" class="mapIconButton truncate" ng-click="deletePolygon()" ng-show="drawState == drawingStates.SELECTED" ng-if="hasCustomPermission('Polygons_create_update')">
												<span>{!$Label.Delete}</span>
											</div>
										</div>

										<div id="polygonsList">
											<div id="polygonsByTerritoriesTree">
										    	<!-- treeview body will be here later -->
										    </div>
										</div>
									</div>
								</div>
							</div>
							<div id="mapAlert" ng-show="showTooManyReportsAlert">{!$Label.Reports_exceed_marker_amount_limit}
								<svg aria-hidden="true" class="slds-icon mapAlertClose" ng-click="showTooManyReportsAlert = false">
									 <use xlink:href="{!URLFOR($Resource.LightningDesignSystem, 'assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
								 </svg>
							</div>


							<div id="choosePolygonsToCut" ng-show="drawState == drawingStates.INTERSECT">{!$Label.Select_intersecting_polygons}
								<svg aria-hidden="true" class="slds-icon choosePolygonsToCutClose" ng-click="drawState = drawingStates.SELECTED; selectedIntersectingPolygons={};">
									 <use xlink:href="{!URLFOR($Resource.LightningDesignSystem, 'assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
								 </svg>

								<div id="intersectingPolygonsList">
									<span ng-repeat="(key, value) in selectedIntersectingPolygons" class="polygonNameSpan" ng-style="{'border-color': polygons[key].Color__c}">{{polygons[key].Name}}</span>
									<span ng-show="isEmpty(selectedIntersectingPolygons)" class="polygonNamesNameSpace">{!$Label.No_polygons_seleted}</span>
								</div>
								<div class="mapIconButton truncate" ng-click="getIntersectionsForPolygons()" ng-show="!isEmpty(selectedIntersectingPolygons)">
									<span>{!$Label.Go}</span>
								</div>
							</div>
						</div>

						<ui-gmap-google-map pan="false" control="mapControl" id="myMap" center="{latitude: 0 ,longitude: 0}" options="mapOptions" zoom="19" class="map-canvas">

						    <!-- Markers -->
                            <ui-gmap-markers control="markersControl" click="markerClicked" options="'markerOptions'" models="allMarkersArray" idKey="id" coords="'coords'" icon="'icon'">
                            </ui-gmap-markers>

                            <!-- Info Windows -->
                            <ui-gmap-window show="serviceInfoWindow.show" closeClick="markerCloseClicked()" coords="currentMarker.coords" options="infoWindowOptions.service" control="serviceInfoWindow.control">
                                    <div class="googleMapInfoWindowService hasActionButtons">
                                        <img class="mapTooltipIcon" src="{!$Resource.wo_icon_png}"/>
                                        <h1 class="truncate mapTooltipTitle">{{currentMarker.item | displayFieldSetField : serviceFields[0] }}</h1>

                                        <div ng-show="$parent.$parent.$parent.serviceFields[1] || serviceFields[1]">{{serviceFields[1].Label}}: <span ng-click="$parent.$parent.$parent.openLink($parent.$parent.$parent.currentMarker.item, $parent.$parent.$parent.serviceFields[1])" ng-class="getServiceInfoRowClass(serviceFields[1])">{{currentMarker.item | displayFieldSetField : serviceFields[1]}}</span></div>
                                        <div ng-show="$parent.$parent.$parent.serviceFields[2] || serviceFields[2]">{{serviceFields[2].Label}}: <span ng-click="$parent.$parent.$parent.openLink($parent.$parent.$parent.currentMarker.item, $parent.$parent.$parent.serviceFields[2])" ng-class="getServiceInfoRowClass(serviceFields[2])">{{currentMarker.item | displayFieldSetField : serviceFields[2]}}</span></div>
                                        <div ng-show="$parent.$parent.$parent.serviceFields[3] || serviceFields[3]">{{serviceFields[3].Label}}: <span ng-click="$parent.$parent.$parent.openLink($parent.$parent.$parent.currentMarker.item, $parent.$parent.$parent.serviceFields[3])" ng-class="getServiceInfoRowClass(serviceFields[3])">{{currentMarker.item | displayFieldSetField : serviceFields[3]}}</span></div>
                                        <div ng-show="$parent.$parent.$parent.serviceFields[4] || serviceFields[4]">{{serviceFields[4].Label}}: <span ng-click="$parent.$parent.$parent.openLink($parent.$parent.$parent.currentMarker.item, $parent.$parent.$parent.serviceFields[4])" ng-class="getServiceInfoRowClass(serviceFields[4])">{{currentMarker.item | displayFieldSetField : serviceFields[4]}}</span></div>
                                        <div ng-show="$parent.$parent.$parent.serviceFields[5] || serviceFields[5]">{{serviceFields[5].Label}}: <span ng-click="$parent.$parent.$parent.openLink($parent.$parent.$parent.currentMarker.item, $parent.$parent.$parent.serviceFields[5])" ng-class="getServiceInfoRowClass(serviceFields[5])">{{currentMarker.item | displayFieldSetField : serviceFields[5]}}</span></div>
                                        <div ng-show="$parent.$parent.$parent.serviceFields[6] || serviceFields[6]">{{serviceFields[6].Label}}: <span ng-click="$parent.$parent.$parent.openLink($parent.$parent.$parent.currentMarker.item, $parent.$parent.$parent.serviceFields[6])" ng-class="getServiceInfoRowClass(serviceFields[6])">{{currentMarker.item | displayFieldSetField : serviceFields[6]}}</span></div>
                                        <div ng-show="$parent.$parent.$parent.serviceFields[7] || serviceFields[7]">{{serviceFields[7].Label}}: <span ng-click="$parent.$parent.$parent.openLink($parent.$parent.$parent.currentMarker.item, $parent.$parent.$parent.serviceFields[7])" ng-class="getServiceInfoRowClass(serviceFields[7])">{{currentMarker.item | displayFieldSetField : serviceFields[7]}}</span></div>
                                        <div ng-show="$parent.$parent.$parent.serviceFields[8] || serviceFields[8]">{{serviceFields[8].Label}}: <span ng-click="$parent.$parent.$parent.openLink($parent.$parent.$parent.currentMarker.item, $parent.$parent.$parent.serviceFields[8])" ng-class="getServiceInfoRowClass(serviceFields[8])">{{currentMarker.item | displayFieldSetField : serviceFields[8]}}</span></div>
                                        <div ng-show="$parent.$parent.$parent.serviceFields[9] || serviceFields[9]">{{serviceFields[9].Label}}: <span ng-click="$parent.$parent.$parent.openLink($parent.$parent.$parent.currentMarker.item, $parent.$parent.$parent.serviceFields[9])" ng-class="getServiceInfoRowClass(serviceFields[9])">{{currentMarker.item | displayFieldSetField : serviceFields[9]}}</span></div>


                                        <div class="markerButtons">
                                            <div class="serviceButtonOnMap" ng-click="$parent.$parent.$parent.openLightbox($parent.$parent.$parent.currentMarker.item.id,'service')">{!$Label.viewDetails}</div>
                                            <div class="serviceButtonOnMap" ng-show="$parent.$parent.$parent.needToShowDispatchButton()" ng-click="$parent.$parent.$parent.changeStatusToDispatch($parent.$parent.$parent.currentMarker.item.id)">
                                                <img class="quickActionLoading"
                                                     src="{!URLFOR($Resource.LightningDesignSystem, 'assets/images/spinners/slds_spinner.gif')}"
                                                     ng-show="$parent.$parent.$parent.isServiceCurrentlyDispatching()"/>
                                                {!$Label.Dispatch}
                                            </div>
                                            <div class="serviceButtonOnMap" ng-show="!currentMarker.item.pinned && !$parent.$parent.$parent.isPinnedStatus() && hasCustomPermission('Schedule')" ng-click="$parent.$parent.$parent.autoScheduleService()">
                                                <img class="quickActionLoading"
                                                     src="{!URLFOR($Resource.LightningDesignSystem, 'assets/images/spinners/slds_spinner.gif')}"
                                                     ng-show="$parent.$parent.$parent.isServiceCurrentlyScheduling()"/>
                                                {{ currentMarker.item.resourceId ? '{!JSENCODE($Label.Reschedule)}' : '{!JSENCODE($Label.Schedule)}' }}
                                            </div>
                                        </div>
                                    </div>
                            </ui-gmap-window>


							<ui-gmap-window show="territoryInfoWindow.show" closeClick="markerCloseClicked()" coords="currentMarker.coords" options="infoWindowOptions.resource">
								<div class="googleMapInfoWindowHomebase">
									<h1 class="truncate mapTooltipTitle"><span class="homebaseLabel">{{ currentMarker.item.name }}</span></h1>
									<div class="buttonOnMap" ng-click="$parent.$parent.$parent.openSObjectLink($parent.$parent.$parent.currentMarker.id)">{!$Label.viewDetails}</div>
								</div>
							</ui-gmap-window>

                            <ui-gmap-window show="resourceInfoWindow.show" closeClick="markerCloseClicked()" coords="currentMarker.coords" options="infoWindowOptions.resource">
                                <div class="googleMapInfoWindowHomebase">
                                    <svg aria-hidden="true" class="slds-icon homebaseTooltipIcon">
                                         <use xlink:href="{!URLFOR($Resource.LightningDesignSystem, 'assets/icons/utility-sprite/svg/symbols.svg#home')}"></use>
                                     </svg>
                                    <h1 class="truncate mapTooltipTitle"><span class="homebaseLabel">{{ "{!JSENCODE($Label.homebase_of)}" | replaceLabels : currentMarker.item.resourceName }}</span></h1>
                                    <div class="buttonOnMap"  ng-click="$parent.$parent.$parent.openSObjectLink($parent.$parent.$parent.currentMarker.id)">{!$Label.viewDetails}</div>
                                </div>
                            </ui-gmap-window>

                            <ui-gmap-window show="livePosInfoWindow.show" closeClick="markerCloseClicked()" coords="currentMarker.coords" options="infoWindowOptions.resource">
                                <div class="googleMapInfoWindowLivePos hasActionButtons">
                                    <svg aria-hidden="true" class="slds-icon livePosTooltipIcon">
                                     	<use xlink:href="{!URLFOR($Resource.LightningDesignSystem, 'assets/icons/utility-sprite/svg/symbols.svg#user')}"></use>
                                 	</svg>
                                    <h1 class="truncate mapTooltipTitle" ng-bind="$parent.$parent.$parent.currentMarker.item.resourceName"></h1>
                                    <div>{!$Label.Last_seen} {{ currentMarker.item.lastModifiedDate | amDateFormat:'lll' }}</div>

                                    <div class="buttonOnMap"  ng-click="$parent.$parent.$parent.openLightbox($parent.$parent.$parent.currentMarker.resourceId,'resource')">{!$Label.viewDetails}</div>
                                </div>
                            </ui-gmap-window>

                            <ui-gmap-window show="reportInfoWindow.show" closeClick="markerCloseClicked()" coords="currentMarker.coords" options="infoWindowOptions.report">
                                <div class="googleMapInfoWindowService">
                                    <svg aria-hidden="true" class="slds-icon reportTooltipIcon">
                                         <use xlink:href="{!URLFOR($Resource.LightningDesignSystem, 'assets/icons/standard-sprite/svg/symbols.svg#report')}"></use>
                                     </svg>
                                    <h1 class="truncate mapTooltipTitle">{{currentMarker.reportName}}</h1>

                                    <div ng-show="$parent.$parent.$parent.reportFields[0] || reportFields[1]">{{reportFields[0].APILabel}}: <span ng-click="$parent.$parent.$parent.openReportLink($parent.$parent.$parent.reportFields[0])" ng-class="{resourceOnServiceTT: $parent.$parent.$parent.reportFields[0].isReference}">{{reportFields[0] | displayReportField }}</span></div>
                                    <div ng-show="$parent.$parent.$parent.reportFields[1] || reportFields[1]">{{reportFields[1].APILabel}}: <span ng-click="$parent.$parent.$parent.openReportLink($parent.$parent.$parent.reportFields[1])" ng-class="{resourceOnServiceTT: $parent.$parent.$parent.reportFields[1].isReference}">{{reportFields[1] | displayReportField }}</span></div>
                                    <div ng-show="$parent.$parent.$parent.reportFields[2] || reportFields[2]">{{reportFields[2].APILabel}}: <span ng-click="$parent.$parent.$parent.openReportLink($parent.$parent.$parent.reportFields[2])" ng-class="{resourceOnServiceTT: $parent.$parent.$parent.reportFields[2].isReference}">{{reportFields[2] | displayReportField }}</span></div>
                                    <div ng-show="$parent.$parent.$parent.reportFields[3] || reportFields[3]">{{reportFields[3].APILabel}}: <span ng-click="$parent.$parent.$parent.openReportLink($parent.$parent.$parent.reportFields[3])" ng-class="{resourceOnServiceTT: $parent.$parent.$parent.reportFields[3].isReference}">{{reportFields[3] | displayReportField }}</span></div>
                                    <div ng-show="$parent.$parent.$parent.reportFields[4] || reportFields[4]">{{reportFields[4].APILabel}}: <span ng-click="$parent.$parent.$parent.openReportLink($parent.$parent.$parent.reportFields[4])" ng-class="{resourceOnServiceTT: $parent.$parent.$parent.reportFields[4].isReference}">{{reportFields[4] | displayReportField }}</span></div>
                                    <div ng-show="$parent.$parent.$parent.reportFields[5] || reportFields[5]">{{reportFields[5].APILabel}}: <span ng-click="$parent.$parent.$parent.openReportLink($parent.$parent.$parent.reportFields[5])" ng-class="{resourceOnServiceTT: $parent.$parent.$parent.reportFields[5].isReference}">{{reportFields[5] | displayReportField }}</span></div>
                                    <div ng-show="$parent.$parent.$parent.reportFields[6] || reportFields[6]">{{reportFields[6].APILabel}}: <span ng-click="$parent.$parent.$parent.openReportLink($parent.$parent.$parent.reportFields[6])" ng-class="{resourceOnServiceTT: $parent.$parent.$parent.reportFields[6].isReference}">{{reportFields[6] | displayReportField }}</span></div>
                                    <div ng-show="$parent.$parent.$parent.reportFields[7] || reportFields[7]">{{reportFields[7].APILabel}}: <span ng-click="$parent.$parent.$parent.openReportLink($parent.$parent.$parent.reportFields[7])" ng-class="{resourceOnServiceTT: $parent.$parent.$parent.reportFields[7].isReference}">{{reportFields[7] | displayReportField }}</span></div>
                                    <div ng-show="$parent.$parent.$parent.reportFields[8] || reportFields[8]">{{reportFields[8].APILabel}}: <span ng-click="$parent.$parent.$parent.openReportLink($parent.$parent.$parent.reportFields[8])" ng-class="{resourceOnServiceTT: $parent.$parent.$parent.reportFields[8].isReference}">{{reportFields[8] | displayReportField }}</span></div>
                                    <div ng-show="$parent.$parent.$parent.reportFields[9] || reportFields[9]">{{reportFields[9].APILabel}}: <span ng-click="$parent.$parent.$parent.openReportLink($parent.$parent.$parent.reportFields[9])" ng-class="{resourceOnServiceTT: $parent.$parent.$parent.reportFields[9].isReference}">{{reportFields[9] | displayReportField }}</span></div>

                                </div>
                            </ui-gmap-window>

                            <!-- Layers -->
                            <ui-gmap-layer type="TrafficLayer" show='trafficLayerEnabled'></ui-gmap-layer>

						</ui-gmap-google-map>


					</section>


				</div>
			</div>
            </apex:outputPanel>


            <div id="GanttMapContainer" ng-show="workingState == 'gantt'">

				<div ng-controller="ctrlGantt" id="GanttContainer">

		            <div class="dhx-scheduler dragTarget" resources="getResources() | timelineFilter:searchEmployee:skillsFilter:selectedSkills:resourceFilters:resourceFilterHelper.selectionInfo" style="height:100%; width:100%;">
		            	<div id="JumpToDate" ng-click="jumpToDate()" title="{!$Label.JumpToDate}">
							<svg id="JumpToDateIcon" aria-hidden="true" class="slds-icon">
								 <use xlink:href="{!URLFOR($Resource.LightningDesignSystem, 'assets/icons/standard-sprite/svg/symbols.svg#event')}"></use>
							 </svg>
			            	<i class="fa fa-caret-down"></i>
		            	</div>

				        <div class="dhx_cal_prev_button" ng-click="changeDatesByArrows('left')" title="{!$Label.Scroll1DayLeft}"><i class="fa fa-angle-left"></i></div>
				        <div class="truncate todayButton" ng-click="jumpToToday()" title="{!$Label.Jump_To_Today}">{!$Label.Today}</div>
				        <div class="dhx_cal_next_button" ng-click="changeDatesByArrows('right')" title="{!$Label.Scroll1DayRight}"><i class="fa fa-angle-right"></i></div>

				        <div class="dhx_cal_date"></div>

				        <div id="selectTimeline" class="truncate" cs-toggle="selectTimelineContainer" ng-bind="timelineName" title="{{timelineName}}"></div>
				        <div id="selectTimelineContainer">
				        	<div class="truncate" ng-click="changeTimeline(0)">{!$Label.In_Day}</div>
				        	<div class="truncate" ng-click="changeTimeline(1)">{!$Label.Daily}</div>
				        	<div class="truncate" ng-click="changeTimeline(2)">{!$Label.X2_Days}</div>
				        	<div class="truncate" ng-click="changeTimeline(3)">{!$Label.X3_Days}</div>
				        	<div class="truncate" ng-click="changeTimeline(7)">{!$Label.Weekly}</div>
							<div class="truncate" ng-if="hasCustomPermission('MDT_View')" ng-click="changeTimeline(35)">{!$Label.MDTVIEW}</div>
							<div class="truncate" ng-if="hasCustomPermission('Monthly_Utilization')" ng-click="changeTimeline(30)">{!$Label.Utilization}</div>
				        </div>

				    </div>

				    <div id="SearchEmployeesOnGanttContainer" ng-click="showmode()">
				    	<input type="text" ng-model="searchEmployee" cs-stop-propagation="keydown" ng-model-options="{ debounce: 250 }" placeholder="{!$Label.SearchResources}" class="dragTarget"></input>
				    	<!--<i class="fa fa-times" ng-show="searchEmployee != ''" ng-click="searchEmployee = ''"></i>-->
						<svg aria-hidden="true" class="slds-icon clearEmployeeSearch" ng-show="searchEmployee != ''" ng-click="searchEmployee = ''">
							 <use xlink:href="{!URLFOR($Resource.LightningDesignSystem, 'assets/icons/utility-sprite/svg/symbols.svg#close')}"></use>
						 </svg>
						<svg aria-hidden="true" class="slds-icon UserSearchIcon">
							 <use xlink:href="{!URLFOR($Resource.LightningDesignSystem, 'assets/icons/utility-sprite/svg/symbols.svg#user')}"></use>
						 </svg>

				    	<div id="filterSkillsButton" cs-toggle="SelectSkilsPropertyBox" title="{!$Label.Filter_by_skills}">
							<svg aria-hidden="true" class="slds-icon FilterGanttIcon">
								 <use xlink:href="{!URLFOR($Resource.LightningDesignSystem, 'assets/icons/utility-sprite/svg/symbols.svg#filterList')}"></use>
							 </svg>
				    		<i class="fa fa-caret-down"></i>
				    	</div>

				    	<div ng-show="isGanttFilterApplied()" id="SkillsFilterOn"></div>

				    	<!-- for gantt filters -->
					   	<div id="SelectSkilsPropertyBox" ng-click="$event.stopPropagation()" ng-init="filterShowHours=true; filterShowSkills=false; filterShowMisc = false;">

					   		<div class="lightning-tabs">
						   		<div ng-class="{'tab-selected': filterShowHours}" title="{!$Label.hours}" class="truncate" ng-click="filterShowHours = true; filterShowSkills = false; filterShowMisc = false; filterShowMonthly = false;">{!$Label.hours}</div>
								<div ng-class="{'tab-selected': filterShowMisc}"  title="{!$Label.Resources}" class="truncate" ng-click="filterShowMisc = true; filterShowSkills = false; filterShowHours = false; filterShowMonthly = false;">{!$Label.Resources}</div>
						   		<div ng-class="{'tab-selected': filterShowSkills}"  title="{!$Label.skills}" class="truncate" ng-click="filterShowSkills = true; filterShowHours = false; filterShowMisc = false; filterShowMonthly = false;">{!$Label.skills}</div>
								<div ng-class="{'tab-selected': filterShowMonthly}"  title="{!$Label.Utilization}" class="truncate" ng-click="filterShowMonthly = true; filterShowSkills = false; filterShowHours = false; filterShowMisc = false;">{!$Label.Utilization}</div>
					   		</div>

							<!-- Monthly capacities filter options -->
							<div id="MonthlyFilterContent" ng-show="filterShowMonthly">
								<p>{!$Label.MonthlyCapacityOptionsExplain}</p>

								<div class="MonthlyFilterFieldSetContainer">
									<input type="checkbox" ng-change="updateMonthlyKpi()" ng-model="capacityFields.services" id="monthlyCalc_Services" />
									<label for="monthlyCalc_Services">{!$Label.justAppointments}</label>
								</div>

								<div class="MonthlyFilterFieldSetContainer">
									<input type="checkbox" ng-change="updateMonthlyKpi()" ng-model="capacityFields.travel" id="monthlyCalc_Travel" />
									<label for="monthlyCalc_Travel">{!$Label.Travel_time}</label>
								</div>

								<div class="MonthlyFilterFieldSetContainer">
									<input type="checkbox" ng-change="updateMonthlyKpi()" ng-model="capacityFields.na" id="monthlyCalc_NA" />
									<label for="monthlyCalc_NA">{!$Label.NonAvailabilities}</label>
								</div>

								<div class="MonthlyFilterFieldSetContainer">
									<input type="checkbox" ng-change="updateMonthlyKpi()" ng-model="capacityFields.breaks" id="monthlyCalc_Breaks" />
									<label for="monthlyCalc_Breaks">{!$Label.Breaks}</label>
								</div>

								<div class="MonthlyFilterFieldSetContainer">
									<input type="checkbox" ng-change="updateMonthlyKpi()" ng-model="capacityFields.overtime" id="monthlyCalc_Overtime" />
									<label for="monthlyCalc_Overtime">{!$Label.Overtime}</label>
								</div>
							</div>


							<div id="ResourceFilterContent" ng-show="filterShowMisc">

								<div id="SortResorceByField">
									{!$Label.SortBy}
									<select ng-model="resourceFilterHelper.resourceFieldToSortyBy">
										<option ng-repeat="field in resourceFilterHelper.getResourceFieldset()" value="{{field[2]}}">{{ field[0] }}</option>
									</select>

									<i ng-click="resourceFilterHelper.descending = !resourceFilterHelper.descending" ng-show="resourceFilterHelper.descending" class="fa fa-sort-amount-asc" title="{!$Label.Ascending}"></i>
									<i ng-click="resourceFilterHelper.descending = !resourceFilterHelper.descending" ng-show="!resourceFilterHelper.descending" class="fa fa-sort-amount-desc" title="{!$Label.Descending}"></i>

								</div>

								<div id="GanttResourceFilterExplain">
									<i class="ResetResourceFilter fa fa-square-o" ng-click="resourceFilterHelper.resetFilter();resourceFilters.showWorkingResource = false;"></i>
									<i id="SetAllResourceFilter" class="ResetResourceFilter fa fa-check-square-o" ng-click="resourceFilterHelper.setAll(); resourceFilters.showWorkingResource = true;"></i>
									<span id="resourceExplainCrap"></span>
								</div>

								<input type="checkbox" id="resourceFilters_showOnlyWorking" ng-model ="resourceFilters.showWorkingResource" />
								<label for="resourceFilters_showOnlyWorking">{!$Label.ShowOnlyWorking}</label><br/>

								<!-- show boolean fields of resource fieldset -->
								<div ng-repeat="field in resourceFilterHelper.getResourceFieldset()" class="Gantt-ResourceFilterFieldSetContainer truncate" ng-show="field[1] === 'BOOLEAN'">
									<input type="checkbox" ng-model="resourceFilterHelper.selectionInfo.resourceFilteringOptions[field[2]]" id="resource_{{field[2]}}" />
									<label for="resource_{{field[2]}}" title="{{ field[0] }}">{{ field[0] }}</label>
								</div>

								<div id="ResourceFilterPicklistContainer">
									{!$Label.OneOfTheFollowing}<br/>
									<select id="GanttResourceFilterSelect"
											ng-model="resourceFilterHelper.selectionInfo.selectedPicklist"
											ng-change="resourceFilterHelper.selectionInfo.picklistOptions.length = 0; resourceFilterHelper.selectionInfo.picklistOptionsModel.length = 0; resourceFilterHelper.selectionInfo.picklistNullValues = false"
											ng-init="resourceFilterHelper.selectionInfo.selectedPicklist = 'select_a_field'">
										<option value="select_a_field" >{!$Label.SelectAField}</option>
										<option ng-repeat="field in resourceFilterHelper.getResourceFieldset()" ng-show="field[1] === 'PICKLIST'" value="{{field[2]}}">{{ field[0] }}</option>
									</select><br/>

									<!-- checkboxes of selected picklist -->
									<div ng-repeat="value in resourceFilterHelper.getPicklistNames()[resourceFilterHelper.selectionInfo.selectedPicklist]" class="Gantt-ResourceFilterFieldSetContainer PicklistValuesContainer truncate">
										<input type="checkbox"
											   ng-change="resourceFilterHelper.updateSelectedPicklist(value,resourceFilterHelper.selectionInfo.picklistOptionsModel[$index])"
											   ng-model="resourceFilterHelper.selectionInfo.picklistOptionsModel[$index]"
											   id="ResourcePicklistValue_{{$index}}" />
										<label for="ResourcePicklistValue_{{$index}}">{{ value }}</label>
									</div>

									<div id="PicklistNotDefinedValue" ng-show="resourceFilterHelper.selectionInfo.selectedPicklist !== 'select_a_field'" class="Gantt-ResourceFilterFieldSetContainer truncate">
										<input type="checkbox"
											   ng-model="resourceFilterHelper.selectionInfo.picklistNullValues"
											   id="ResourcePicklistValue___Null" />
										<label for="ResourcePicklistValue___Null">{!$Label.None}</label>
									</div>

								</div>
							</div>

					   		<div id="BusinessHoursContent" ng-show="filterShowHours">

					   			<p>{!$Label.BusinessHours_SelectHoursToView}</p>

								<cs-range min="0" max="24"
									default-start="{{businessHoursRange.start}}"
									default-end="{{businessHoursRange.end}}"
									ng-model="businessHoursRange"
									showing-text="{!$Label.BusinessHours_ShowingFromXtoY}">
								</cs-range>

								<div id="includeWeekends"><input ng-model="businessHoursRange.includeWeekends" type="checkbox" /> <span ng-click="businessHoursRange.includeWeekends = !businessHoursRange.includeWeekends">{!$Label.BusinessHours_IncludeWeekends}</span></div>

					   		</div>

					   		<div id="FilterSkillsContent" ng-show="filterShowSkills">
						   	   <input type="checkbox" id="enableSkills" ng-model ="skillsFilter" ng-click="enableSkillsSelection()" /> <label for="enableSkills">{!$Label.Enable_skills_filter}</label><br/>

				   		   	   <div class="SkillsSelection" ng-class ="{disableSkillsFilter: !skillsFilter}">
				   		   			<span class="skillQuickSelectors" ng-click = "!skillsFilter || selectAllSkills()"><i class="fa fa-check-square-o" title="{!$Label.Select_all}"></i></span>
				   					<span class="skillQuickSelectors" ng-click = "!skillsFilter || unSelecteAllSkills()"><i class="fa fa-square-o" title="{!$Label.Select_none}"></i></span>
						   	   </div>

				               <div class="graySeparatorSkills"></div>

				               <div id="SkillsNameBox">
					                <div class="skillNameInFilter truncate" ng-class="{disableSkillsFilter: !skillsFilter}" ng-repeat="skill in skills track by skill.Id">
				                  		<input type="checkbox" id="SkillFilter_{{skill.MasterLabel}}" ng-disabled = "!skillsFilter" ng-init ="selectedSkills[skill.Id]=false" ng-model="selectedSkills[skill.Id]" /> <label for="SkillFilter_{{skill.MasterLabel}}" title="{{skill.MasterLabel}}">{{ :: skill.MasterLabel}}</label>
				              		</div>
		              		   </div>

			                   <div class="ExplainSkillBox">{!$Label.EnablingSkillsExplain}</div>
		                   </div>
						</div>

				    	<div id="timesDragFix"></div>

				    </div>

   					<div id="LockGanttContainer">
				    	<div id="LockSwitch" ng-click="lockGanttToggle()">
							<svg aria-hidden="true" class="slds-icon LockIcon">
								 <use xlink:href="{!URLFOR($Resource.LightningDesignSystem, 'assets/icons/utility-sprite/svg/symbols.svg#lock')}"></use>
							 </svg>

							<svg aria-hidden="true" class="slds-icon UnlockIcon">
								 <use xlink:href="{!URLFOR($Resource.LightningDesignSystem, 'assets/icons/utility-sprite/svg/symbols.svg#unlock')}"></use>
							 </svg>

					    	<div id="LockHandle" ng-class="{lockedSwitch: ganttLocked}"></div>
				    	</div>
				    </div>

				    <div id="breakCreator" draggable="true" class="dragNA" title="{!$Label.create_na_tooltip}" ng-if="hasCustomPermission('Create_Absences_from_Gantt')">
						<svg aria-hidden="true" class="slds-icon NaIcon">
							 <use xlink:href="{!URLFOR($Resource.LightningDesignSystem, 'assets/icons/utility-sprite/svg/symbols.svg#ban')}"></use>
						 </svg>
				    	<input id="breakDuration"
							   type="number"
							   value="60"
							   min="10"
							   step="5"
							   max="1440"
							   onkeydown="return false"
							   class="dragTarget globalWhiteButton"
							   ng-paste="$event.preventDefault()"
							   ng-model="defaultDragNa.selectedNaDuration"
							   ng-model-options="{ debounce: 200 }"
							   ng-change="saveDragNaDefaults('duration')" />
						<div id="naOptionsBtn"  cs-toggle="naOptionsContainer"><i class="fa fa-caret-down"></i></div>
						<div id="naOptionsContainer" ng-click="$event.stopPropagation()" draggable="false">
							<div class="naOptionsHeader">
								<div>{!$Label.Default_Non_Availabilty}</div>
							</div>
							<select id="naOptionSelectType" class="naOptionInput" draggable="false" ng-model="defaultDragNa.selectedNaType" ng-change="saveDragNaDefaults('type')">
								<!-- <option value="None">{!$Label.None}</option> -->
								<option ng-repeat="type in nonAvailabilityTypes" value="{{type}}">{{type}}</option>
							</select>

							<input id="naOptionGanttLabel"
								   class="naOptionInput"
								   type="text"
								   placeholder="{!$Label.Gantt_Label}"
								   ng-model="defaultDragNa.selectedNaLabel"
								   ng-model-options="{ debounce: 200 }"
								   ng-change="saveDragNaDefaults('label')"
								   draggable="false"
								   ondrop="event.preventDefault()"/>
						</div>
				    </div>
			    </div>

            </div>

        </div>

    </div>

	</html>



	<c:GanttLabels ></c:GanttLabels>
	<c:LightningIcons ></c:LightningIcons>
	<c:ObjectsNames ></c:ObjectsNames>
	<c:GanttRemoteActions ></c:GanttRemoteActions>
	<c:GanttLightboxSettings ></c:GanttLightboxSettings>
	<c:GanttStaticResourcesUrls ></c:GanttStaticResourcesUrls>
	<c:GanttMiscSettings ></c:GanttMiscSettings>

    <script>

        setTimeout(function(){
            $('#FirstTimeLoading>div').show();
        }, 0);

    	bootstrap.Start();

    </script>

</apex:page>